{{- $name := include "fullname" . -}}
{{- $chart := include "chart" . -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  namespace: {{ $.Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ $name }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    helm.sh/chart: {{ $chart }}
    {{- if .labels}}
{{ toYaml .labels | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ default 1 .replicas}}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $name }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $name }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app.kubernetes.io/managed-by: {{ $.Release.Service }}
        helm.sh/chart: {{ $chart }}
        {{- if .additionalLabels}}
{{ toYaml .additionalLabels | nindent 8 }}
        {{- end }}
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        fsGroup: 1001
      containers:
        - name: eth-monitor
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 1001
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          image: "{{ $.Values.image.registry }}/{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          {{- if .command }}
          command: [{{ .command }}]
          {{- if .args }}
          args: {{- range .args }}
            - {{.}}
            {{- end }}
          {{- end }}
          {{- end }}
          env:
            - name: VERBOSITY
              value: {{ $.Values.verbosity }}
          {{- if $.Values.environment }}
          {{- toYaml $.Values.environment | indent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/eth-monitor/config.yaml
              subPath: config.yaml
              readOnly: true
          resources:
            
            {{- toYaml $.Values.resources | nindent 14 }}
      volumes:
        - name: config
          configMap:
            name: {{ $name }}
